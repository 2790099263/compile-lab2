TranslationUnitDecl 0x562e315d5d18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x562e315d6540 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x562e315d62e0 '__int128'
|-TypedefDecl 0x562e315d65b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x562e315d6300 'unsigned __int128'
|-TypedefDecl 0x562e315d68b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x562e315d6690 'struct __NSConstantString_tag'
|   `-Record 0x562e315d6608 '__NSConstantString_tag'
|-TypedefDecl 0x562e315d6950 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x562e315d6910 'char *'
|   `-BuiltinType 0x562e315d5dc0 'char'
|-TypedefDecl 0x562e315d6c48 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag[1]'
| `-ConstantArrayType 0x562e315d6bf0 'struct __va_list_tag[1]' 1 
|   `-RecordType 0x562e315d6a30 'struct __va_list_tag'
|     `-Record 0x562e315d69a8 '__va_list_tag'
|-VarDecl 0x562e316322a0 <./test_cases/01_var_defn2.c:2:1, col:9> col:5 a 'int' cinit
| `-IntegerLiteral 0x562e31632350 <col:9> 'int' 3
|-VarDecl 0x562e31632388 <line:3:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x562e316323f0 <col:9> 'int' 5
`-FunctionDecl 0x562e31632460 <line:5:1, line:8:1> line:5:5 main 'int ()'
  `-CompoundStmt 0x562e31632658 <col:11, line:8:1>
    |-DeclStmt 0x562e316325a0 <line:6:5, col:14>
    | `-VarDecl 0x562e31632518 <col:5, col:13> col:9 used a 'int' cinit
    |   `-IntegerLiteral 0x562e31632580 <col:13> 'int' 5
    `-ReturnStmt 0x562e31632648 <line:7:5, col:16>
      `-BinaryOperator 0x562e31632628 <col:12, col:16> 'int' '+'
        |-ImplicitCastExpr 0x562e316325f8 <col:12> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x562e316325b8 <col:12> 'int' lvalue Var 0x562e31632518 'a' 'int'
        `-ImplicitCastExpr 0x562e31632610 <col:16> 'int' <LValueToRValue>
          `-DeclRefExpr 0x562e316325d8 <col:16> 'int' lvalue Var 0x562e31632388 'b' 'int'
